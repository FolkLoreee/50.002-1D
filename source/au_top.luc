module au_top (
    input clk,              // 100MHz clock
    input rst_n,            // reset button (active low)
    input usb_rx,           // USB->Serial input
    output usb_tx,          // USB->Serial output
    output io_led [3][8],   // LEDs on IO Shield
    output io_seg [8],      // 7-segment LEDs on IO Shield
    output led[8],
    output io_sel [4],      // Digit select on IO Shield
    input io_button [5],    // 5 buttons on IO Shield
    input io_dip [3][8]     // DIP switches on IO Shield
  ) {
  sig rst;
  //counter slowClock(#SIZE(1),#DIV(26), .clk(clk),.rst(rst));
  seq_plus_twoSlow seqplustwo(.clk(clk),.rst(io_button[0]));
  
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
  }
  
  always {
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
    
    usb_tx = usb_rx;        // loop serial port
    io_led[0] = seqplustwo.out;
    led=8h00;
    io_seg = 8hff;          // turn segments off
    io_sel = 4hf;           // select no digits
  }
}